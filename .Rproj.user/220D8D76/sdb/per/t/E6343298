{
    "contents" : "\ngetlocalsimframe <- function(feature_matrix, df_sim_pairs) {\n  gold <- c()\n  alg  <- c()\n  label <- c()\n  for(i in 1:nrow(df_sim_pairs)){\n    e1 <- as.character(df_sim_pairs[i,\"id1\"])\n    e2 <- as.character(df_sim_pairs[i,\"id2\"])\n    label <- append(label, paste(e1, e2, sep=\":\"))\n    gold  <- append(gold, df_sim_pairs[i,\"sim\"])\n    s <- cosine(feature_matrix[e1,], feature_matrix[e2,])[1,1]\n    alg  <- append(alg, s)\n  }\n  dplot <- data.frame(label,gold,alg)\n  return(dplot)\n}\n\n# compute text relatedness and calculate r/rho corelations\ncorrelation <- function(dsim, rtype = \"pearson\") {\n  .e <- globalenv()\n  .e$human <- dsim$gold\n  .e$algorithm <- dsim$alg\n  hist_top <- ggplot()+geom_histogram(aes(human))+\n    theme(legend.position = \"none\",\n          axis.title.x = element_blank(),\n          axis.text.x = element_blank())+\n    scale_x_continuous(breaks = 0:10,\n                       limits = c(0,10),\n                       expand = c(.05,.05))+\n    scale_y_continuous(\"\")\n  empty <- ggplot()+geom_point(aes(1,1), colour=\"white\") +\n    theme(axis.ticks=element_blank(), \n          panel.background=element_blank(), \n          axis.text.x=element_blank(), axis.text.y=element_blank(),           \n          axis.title.x=element_blank(), axis.title.y=element_blank())  \n  scatter <- ggplot()+geom_point(aes(human, algorithm)) +\n    scale_x_continuous(breaks = 0:10,\n                       limits = c(0,10),\n                       expand = c(.05,.05))+\n    scale_y_continuous(breaks = c(0.0,0.2,0.4,0.6,0.8,1.0),\n                       limits = c(0,1),\n                       expand = c(.05,.05))\n  hist_right <- ggplot() + geom_histogram(aes(algorithm)) + coord_flip() +\n    theme(legend.position = \"none\",\n          axis.title.y = element_blank(),\n          axis.text.y = element_blank()) +\n    scale_x_continuous(breaks = c(0.0,0.2,0.4,0.6,0.8,1.0),\n                       limits = c(0,1),\n                       expand = c(.05,.05)) +\n    scale_y_continuous(\"\", breaks=c(0,500,1000))\n  grid.arrange(hist_top, empty, scatter, hist_right, ncol=2, nrow=2, widths=c(4, 1), heights=c(1, 4))\n  return(rcorr(human, algorithm, rtype))\n}\n\n",
    "created" : 1444855674113.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2071296323",
    "id" : "E6343298",
    "lastKnownWriteTime" : 1405208280,
    "path" : "~/projects/clique-based semantic kernel/utils.R",
    "project_path" : "utils.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}